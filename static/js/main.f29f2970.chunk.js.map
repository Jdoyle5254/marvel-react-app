{"version":3,"sources":["components/Welcome.js","components/Movie.js","components/MovieList.js","data/movieData.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","className","Movie","props","movieTitle","movieRelease","onClick","addWatched","id","MovieList","allMovies","movies","map","movie","addwatched","movieData","movieImage","yearSet","App","useState","watched","setWatched","useEffect","console","log","foundMovie","find","updatedWatched","slice","push","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAEe,SAASA,IACpB,OACI,sBAAKC,UAAU,QAAf,UACC,sEACA,iGCJM,SAASC,EAAMC,GAE1B,OACI,sBAAKF,UAAU,YAAf,UAEA,0CAAaE,EAAMC,cACnB,iDAAoBD,EAAME,gBAC1B,wBAAQC,QAAS,kBAAMH,EAAMI,WAAWJ,EAAMK,KAA9C,yBCLO,SAASC,EAAWN,GAE/B,IAAMO,EAAYP,EAAMQ,OAAOC,KAAI,SAAAC,GAC/B,OACI,8BACA,cAACX,EAAD,CACIM,GAAIK,EAAML,GAEVJ,WAAYS,EAAMT,WAClBC,aAAcQ,EAAMR,aACpBE,WAAYJ,EAAMW,YAHbD,EAAML,SAWvB,OACI,oCAAOE,EAAP,OCZD,IAAMK,EAAY,CACzB,CACIP,GAAI,EACJJ,WAAY,qCACZC,aAAc,OACdW,WAAY,GACZC,QAAQ,IAIZ,CACIT,GAAI,EACJJ,WAAY,iBACZC,aAAc,OACdY,QAAS,GACTD,WAAY,IAIhB,CACIR,GAAI,EACJJ,WAAY,WACZC,aAAc,OACdW,WAAY,GACZC,QAAS,IAGb,CACIT,GAAI,EACJJ,WAAY,kBACZC,aAAc,OACdW,WAAY,GACZC,QAAS,K,MCJEC,MA/Bf,WAAgB,IAAD,EACiBC,qBAAvBC,EADM,EACNA,QAASC,EADH,EACGA,WAiBhB,OAHCC,qBAAU,kBAAKC,QAAQC,IAAIJ,MAI1B,sBAAKnB,UAAU,MAAf,UACG,cAACD,EAAD,IACA,cAACS,EAAD,CAAWE,OAAQI,EACnBR,WAnBc,SAACC,GAKnB,IAAMiB,EAAaV,EAAUW,MAAK,SAAAb,GAAK,OAAIA,EAAML,KAAOA,KACxDe,QAAQC,IAAI,aAAcC,GAE3B,IAAME,EAAiBP,EAAQQ,QAC9BD,EAAeE,KAAKJ,GACpBJ,EAAWM,UCTCG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f29f2970.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Welcome() {\r\n    return(\r\n        <div className=\"intro\">\r\n         <h1>What Marvel Movies have you watched?</h1>\r\n         <p>Track your progress for the whole Marvel Movie Universe here!</p>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\n\r\nexport default function Movie(props) {\r\n\r\n    return (\r\n        <div className=\"moviecard\">\r\n\r\n        <h3> Movie: {props.movieTitle}</h3>\r\n        <h2> Release Year: {props.movieRelease}</h2>\r\n        <button onClick={() => props.addWatched(props.id)}>Watched!</button>\r\n        </div>\r\n\r\n    )\r\n}","\r\nimport React from \"react\"\r\nimport Movie from \"./Movie\"\r\n\r\nexport default function MovieList (props) {\r\n\r\n    const allMovies = props.movies.map(movie => {\r\n        return (\r\n            <div>\r\n            <Movie \r\n                id={movie.id}\r\n                key={movie.id}\r\n                movieTitle={movie.movieTitle}\r\n                movieRelease={movie.movieRelease}\r\n                addWatched={props.addwatched}\r\n            />\r\n\r\n\r\n            </div>\r\n\r\n        )\r\n    })\r\n    return (\r\n        <div> {allMovies} </div>\r\n    )\r\n}","/* TODO create movie objects for display \r\n{\r\n    id: 1,\r\n    movieTitle: \"\",\r\n    movieRelease: \"\",\r\n    movieImage: \"\",\r\n    yearSet: \"\"\r\n\r\n},\r\n */\r\n\r\nexport const movieData = [\r\n{\r\n    id: 1,\r\n    movieTitle: \"Captain America: The First Avenger\",\r\n    movieRelease: \"2011\",\r\n    movieImage: \"\",\r\n    yearSet:\"\"\r\n\r\n},\r\n\r\n{\r\n    id: 2,\r\n    movieTitle: \"Captain Marvel\",\r\n    movieRelease: \"2019\",\r\n    yearSet: \"\",\r\n    movieImage: \"\"\r\n\r\n},\r\n\r\n{\r\n    id: 3,\r\n    movieTitle: \"Iron Man\",\r\n    movieRelease: \"2008\",\r\n    movieImage: \"\",\r\n    yearSet: \"\"\r\n\r\n},\r\n{\r\n    id: 4,\r\n    movieTitle: \"Incredible Hulk\",\r\n    movieRelease: \"2008\",\r\n    movieImage: \"\",\r\n    yearSet: \"\"\r\n\r\n},\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n]","import Welcome from \"./components/Welcome\"\nimport MovieList from \"./components/MovieList\"\nimport { movieData } from \"./data/movieData\"\n// import WatchedList from \"./components/WatchedList\"\nimport React, { useState, useEffect } from 'react'\n\nimport './App.css';\n\nfunction App() {\n  const {watched, setWatched} = useState()\n\n  const addWatched = (id) => {\n    /*\n    using the id, find the player object in the playerData array take the found player and mot it into the favorite array\n\n    */\n   const foundMovie = movieData.find(movie => movie.id === id)\n   console.log('foundmovie', foundMovie)\n   \n  const updatedWatched = watched.slice()\n   updatedWatched.push(foundMovie)\n   setWatched(updatedWatched)\n  }\n   useEffect(()=> console.log(watched))\n\n\n  return (\n    <div className=\"App\">\n       <Welcome />\n       <MovieList movies={movieData}\n       addWatched={addWatched} />\n\n      \n       {/* <WatchedList watched={watched} /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}